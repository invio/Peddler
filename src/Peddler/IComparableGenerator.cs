using System;

namespace Peddler {

    /// <summary>
    /// A common interface for generating values of type <typeparamref name="T"/> that are
    /// greater than, less than, or equal to provided values of <typeparamref name="T"/>.
    /// </summary>
    public interface IComparableGenerator<T> {

        /// <summary>
        /// Creates a new instance of <typeparamref name="T"/> that is
        /// greater than the value of <paramref name="other" />.
        /// </summary>
        /// <param name="other">
        /// An instance of <typeparamref name="T"/> that is a lower, exclusive
        /// boundary for any value that this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// may generate.
        /// </param>
        /// <exception cref="Peddler.UnableToGenerateValueException">
        /// Thrown when this <see cref="T:Peddler.IComparableGenerator`1"/> is unable to
        /// generate a value that is greater than <paramref name="other" />.
        /// </exception>
        /// <returns>
        /// An instance of <typeparamref name="T"/> that is greater than
        /// <paramref name="other" />.
        /// </returns>
        T NextGreaterThan(T other);

        /// <summary>
        /// Creates a new instance of <typeparamref name="T"/> that is
        /// greater than or equal to the value of <paramref name="other" />.
        /// </summary>
        /// <remarks>
        /// The range of values generated by this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// implementation may have a lower boundary that is greater than
        /// <paramref name="other" />. In that case, the value returned will always be greater
        /// than <paramref name="other" />.
        /// </remarks>
        /// <param name="other">
        /// An instance of <typeparamref name="T"/> that is a lower, inclusive
        /// boundary for any value that this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// may generate.
        /// </param>
        /// <exception cref="Peddler.UnableToGenerateValueException">
        /// Thrown when this <see cref="T:Peddler.IComparableGenerator`1"/> is unable to
        /// generate a value that is greater than or equal to <paramref name="other" />.
        /// </exception>
        /// <returns>
        /// An instance of <typeparamref name="T"/> that is greater than
        /// or equal to <paramref name="other" />.
        /// </returns>
        T NextGreaterThanOrEqualTo(T other);

        /// <summary>
        /// Creates a new instance of <typeparamref name="T"/> that is
        /// less than the value of <paramref name="other" />.
        /// </summary>
        /// <param name="other">
        /// An instance of <typeparamref name="T"/> that is an upper, exclusive
        /// boundary for any value that this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// may generate.
        /// </param>
        /// <exception cref="Peddler.UnableToGenerateValueException">
        /// Thrown when this <see cref="T:Peddler.IComparableGenerator`1"/> is unable to
        /// generate a value that is less than <paramref name="other" />.
        /// </exception>
        /// <returns>
        /// An instance of <typeparamref name="T"/> that is less than
        /// <paramref name="other" />.
        /// </returns>
        T NextLessThan(T other);

        /// <summary>
        /// Creates a new instance of <typeparamref name="T"/> that is
        /// less than or equal to the value of <paramref name="other" />.
        /// </summary>
        /// <remarks>
        /// The range of values generated by this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// implementation may have an upper boundary that is less than
        /// <paramref name="other" />. In that case, the value returned will always be less than
        /// <paramref name="other" />.
        /// </remarks>
        /// <param name="other">
        /// An instance of <typeparamref name="T"/> that is an upper, inclusive
        /// boundary for any value that this <see cref="T:Peddler.IComparableGenerator`1"/>
        /// may generate.
        /// </param>
        /// <exception cref="Peddler.UnableToGenerateValueException">
        /// Thrown when this <see cref="T:Peddler.IComparableGenerator`1"/> is unable to
        /// generate a value that is less than or equal to <paramref name="other" />.
        /// </exception>
        /// <returns>
        /// An instance of <typeparamref name="T"/> that is less than
        /// or equal to <paramref name="other" />.
        /// </returns>
        T NextLessThanOrEqualTo(T other);

    }

}
